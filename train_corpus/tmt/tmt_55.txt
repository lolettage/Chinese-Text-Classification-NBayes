一种针对安卓操作系统关键驱动程序的加固方法 本发明公布了一种针对安卓操作系统关键驱动程序的加固方法，通过向LSM框架注册安全模块，实现LSM框架接口，作为隔离层；通过LSM接口实现对驱动参数的过滤和对参数类型的检查，使得用户进程调用关键驱动程序时都必须通过LSM接口的检测；在LSM接口代码中实现对关键驱动程序使用的内核资源的跟踪和记录；当安卓操作系统关键驱动程序占用的某一项系统资源超过设定的相应阈值时，拒绝用户进程对安卓操作系统关键驱动程序的调用，由此完成针对该特定的驱动程序的加固。本发明可提高Android系统中驱动程序的容错能力，能够防止非法调用驱动程序，检查得到进行恶意调用的用户进程。
一种Android系统的运行环境检测方法 本发明公布了一种Android系统的运行环境检测方法，利用高速缓冲存储器cache的特性来检测当前Android系统的运行环境是Android模拟器还是Android真机；包括步骤：在任意一个地址$address上执行一个指令，设为旧指令；向$address写入一个新指令，新指令与旧指令不同；再次执行$address的指令；根据步骤3)指令执行结果，得到所执行的指令是新指令还是旧指令，由此来检测当前Android系统的运行环境是Android模拟器还是Android真机。本发明提供的技术方案能够有效且简便地达到检测Android系统运行环境的目的。
一种Android系统的应用程序的加固方法 本发明公布了一种Android系统的应用程序的加固方法，通过二进制流加密对Android应用程序中的关键代码进行加固，保护应用程序代码；包括：解析classes.dex文件；定位到关键方法；进行第一次加密，得到中间数据；对中间数据进行第二次加密；计算新的dex文件的Hash值，加密后存入so文件中；计算得到新的dex文件checksum和signature的值，更新dex文件；重新生成apk，即完成加密过程。解密时，计算dex文件的Hash值，进行加密得到的Hash值与so文件中的值比较；进行二次解密操作，得到关键代码。本发明可使得无法通过反编译工具查看Android源码，且只对关键代码加密保护，保护代码的完整性，有效抵抗静态分析，防止Android程序代码被篡改，保证程序运行效率。
一种基于Android系统陷阱指令的软件加固方法 本发明公布了一种基于Android系统陷阱指令的软件加固方法，利用陷阱指令分析方法，通过解析axml文件，处理Android安装包中的入口文件AndroidManifest.xml，使得应用程序难以被反编译且加固后的应用不影响程序的正常运行；包括：解析Axml文件；构建application属性项，包括索引名称和属性名称，通过修改StringChunk区和修改RessourceChunk区，加到AndroidManifest.xml文件中；修改AndroidManifest.xml文件中对应的Size属性；打包AndroidManifest.xml，完成加固。本发明一方面能够保证处理过的应用不影响程序的正常运行；另一方面可以使得应用程序难以被反编译，防止恶意使用；从而保护应用程序开发者的利益和应用程序的安全。
一种面向Lua语言的加扰混淆方法和解密方法 本发明公布了种面向Lua语言的加扰混淆方法和解密方法，通过代码预处理方法、混淆方法和调用栈转换方法，针对代码进行词法分析，建立数据字典：将单词序列组合成语法短语，得到抽象语法树；通过最小词汇排序法进行初级混淆；通过控制流混淆方法进行高级混淆；使得混淆后的Lua源代码在语义上不发生改变的同时还无法被理解，以达到保护程序代码而又不影响程序的正常执行的目的。解密时，通过读取Lua源程序代码，根据数据字典中存储的对应关系进行源代码的逆向，获得解密后的Lua代码，即加扰混淆之前的Lua源程序代码。本发明可以有效地对Lua源程序进行版权保护，防止Lua源程序被逆向或篡改。
一种Android环境下的密钥保护方法和系统 本发明公布了一种Android环境下的密钥保护方法和系统，通过Android平台的密钥透明加解密操作实现文件保护，包括分别生成加密路径目录表和身份验证文件；扫描加密路径目录表，进行第一次初始化加密；当用户触发解锁屏幕事件，对用于锁屏的密码短语进行哈希算法运算后与身份验证文件进行比对；将密码短语采用Shal算法换算成密钥并存储；当用户发出写请求，调用密钥对文件进行加密；当用户发出读请求，调用密钥对文件进行解密；当用户触发锁定屏幕事件，清除密钥并锁屏。本发明采用结合锁界面尽可能减少对用户操作的影响，对系统文件实现对外受阻、对内无碍的密钥保护。
